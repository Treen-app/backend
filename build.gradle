plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

// 버전 변수 설정
ext {
	springBootVersion = "3.4.0"
	querydslVersion = "5.0.0"
	springdocVersion = "3.0.0"
	lombokVersion = "1.18.28"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 채팅
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework:spring-messaging'
	implementation 'org.springframework.security:spring-security-messaging:6.0.2'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//mongoDB JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final' // 버전은 최신 버전으로 대체하세요

	// lombok
	compileOnly 'org.projectlombok:lombok'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	//aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:3.0.0'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	//H2
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor(
			"com.querydsl:querydsl-apt:5.0.0:jakarta",
			"jakarta.annotation:jakarta.annotation-api",
			"jakarta.persistence:jakarta.persistence-api"
	)
	//s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.767'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.1.1'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
}

tasks.withType(Test) {
	useJUnitPlatform()
}

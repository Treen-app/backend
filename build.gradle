plugins {
	id("java")
	id("org.springframework.boot") version "3.4.0"
	id("io.spring.dependency-management") version "1.1.6"
}

group = "com.app"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom(configurations.annotationProcessor)
	}
}

repositories {
	mavenCentral()
}

// 버전 변수 설정
ext {
	springBootVersion = "3.4.0"
	querydslVersion = "5.0.0"
	springdocVersion = "3.0.0"
	lombokVersion = "1.18.28"
}

dependencies {
	// Spring Boot
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-redis"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	// Lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	// MySQL
	runtimeOnly "com.mysql:mysql-connector-j"

	// Test
	testImplementation "org.springframework.boot:spring-boot-starter-test"

	annotationProcessor(
			"com.querydsl:querydsl-apt:5.0.0:jakarta",
			"jakarta.annotation:jakarta.annotation-api",
			"jakarta.persistence:jakarta.persistence-api"
	)

	//s3
	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.1.1'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.767'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

// QueryDSL 설정
def querydslSrcDir = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}


clean {
	delete file(querydslSrcDir)
}
